import React from "react";
import ReactDOMServer from "react-dom-server";
import { serve } from "std/http/server.ts";
import { mime } from "mimetypes";
import App from "./app.tsx";
const ssr = (component) => (req, match) => {
    const html = `<!doctype html>
    <html>
      <head>
        <script type="module" src="app.js"></script>
        <style>* { font-family: Helvetica; }</style>
      </head>
      <body>
        <div id="root">${ReactDOMServer.renderToString(React.createElement(App, null))}</div>
      </body>
    </html>`;
    const body = new TextEncoder().encode(html);
    const headers = new Headers({
        "Cache-Control": "max-age=3600",
        "Content-Type": "text/html; charset=utf8",
    });
    req.respond({ status: 200, body, headers });
};
const notFound = (req) => req.respond({ status: 404, body: "404 - not found" });
const staticFile = async (req) => {
    const path = `${Deno.cwd()}/public${req.url}`;
    console.log("about to", path);
    try {
        req.respond({
            body: await Deno.open(path),
            headers: new Headers({
                "Content-Type": mime.getType(path) || "text/plain",
            }),
        });
    }
    catch (err) {
        notFound(req);
    }
};
const PORT = 8000;
const server = serve({ port: PORT });
const routes = [{ name: "root", path: /^\/$/, handler: ssr(App) }];
const router = (req) => {
    for (let route of routes) {
        const reg = route.path;
        const match = reg.exec(req.url);
        if (match)
            return route.handler(req, match);
    }
    return staticFile(req);
};
console.log(`ðŸš€ Server is running on http://localhost:${PORT}`);
for await (const req of server) {
    console.log(`url `, req.url);
    router(req);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VydmVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsic2VydmVyLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEtBQUssTUFBTSxPQUFPLENBQUM7QUFDMUIsT0FBTyxjQUFjLE1BQU0sa0JBQWtCLENBQUM7QUFDOUMsT0FBTyxFQUFFLEtBQUssRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBRTNDLE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFFakMsT0FBTyxHQUFHLE1BQU0sV0FBVyxDQUFDO0FBRTVCLE1BQU0sR0FBRyxHQUFHLENBQUMsU0FBbUIsRUFBRSxFQUFFLENBQUMsQ0FDbkMsR0FBa0IsRUFDbEIsS0FBc0IsRUFDdEIsRUFBRTtJQUNGLE1BQU0sSUFBSSxHQUFHOzs7Ozs7O3lCQU9XLGNBQXNCLENBQUMsY0FBYyxDQUFDLG9CQUFDLEdBQUcsT0FBRyxDQUFDOztZQUU1RCxDQUFDO0lBRVgsTUFBTSxJQUFJLEdBQUcsSUFBSSxXQUFXLEVBQUUsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDNUMsTUFBTSxPQUFPLEdBQUcsSUFBSSxPQUFPLENBQUM7UUFDMUIsZUFBZSxFQUFFLGNBQWM7UUFDL0IsY0FBYyxFQUFFLHlCQUF5QjtLQUMxQyxDQUFDLENBQUM7SUFFSCxHQUFHLENBQUMsT0FBTyxDQUFDLEVBQUUsTUFBTSxFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsT0FBTyxFQUFFLENBQUMsQ0FBQztBQUM5QyxDQUFDLENBQUM7QUFFRixNQUFNLFFBQVEsR0FBRyxDQUFDLEdBQWtCLEVBQUUsRUFBRSxDQUN0QyxHQUFHLENBQUMsT0FBTyxDQUFDLEVBQUUsTUFBTSxFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsaUJBQWlCLEVBQUUsQ0FBQyxDQUFDO0FBRXhELE1BQU0sVUFBVSxHQUFHLEtBQUssRUFBRSxHQUFrQixFQUFFLEVBQUU7SUFDOUMsTUFBTSxJQUFJLEdBQUcsR0FBRyxJQUFJLENBQUMsR0FBRyxFQUFFLFVBQVUsR0FBRyxDQUFDLEdBQUcsRUFBRSxDQUFDO0lBQzlDLE9BQU8sQ0FBQyxHQUFHLENBQUMsVUFBVSxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQzlCLElBQUk7UUFDRixHQUFHLENBQUMsT0FBTyxDQUFDO1lBQ1YsSUFBSSxFQUFFLE1BQU0sSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUM7WUFDM0IsT0FBTyxFQUFFLElBQUksT0FBTyxDQUFDO2dCQUNuQixjQUFjLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSSxZQUFZO2FBQ25ELENBQUM7U0FDSCxDQUFDLENBQUM7S0FDSjtJQUFDLE9BQU8sR0FBRyxFQUFFO1FBQ1osUUFBUSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0tBQ2Y7QUFDSCxDQUFDLENBQUM7QUFFRixNQUFNLElBQUksR0FBRyxJQUFJLENBQUM7QUFDbEIsTUFBTSxNQUFNLEdBQUcsS0FBSyxDQUFDLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxDQUFDLENBQUM7QUFRckMsTUFBTSxNQUFNLEdBQVksQ0FBQyxFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFLE1BQU0sRUFBRSxPQUFPLEVBQUUsR0FBRyxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsQ0FBQztBQUU1RSxNQUFNLE1BQU0sR0FBRyxDQUFDLEdBQWtCLEVBQUUsRUFBRTtJQUNwQyxLQUFLLElBQUksS0FBSyxJQUFJLE1BQU0sRUFBRTtRQUN4QixNQUFNLEdBQUcsR0FBRyxLQUFLLENBQUMsSUFBSSxDQUFDO1FBQ3ZCLE1BQU0sS0FBSyxHQUFHLEdBQUcsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ2hDLElBQUksS0FBSztZQUFFLE9BQU8sS0FBSyxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsS0FBSyxDQUFDLENBQUM7S0FDN0M7SUFDRCxPQUFPLFVBQVUsQ0FBQyxHQUFHLENBQUMsQ0FBQztBQUN6QixDQUFDLENBQUM7QUFFRixPQUFPLENBQUMsR0FBRyxDQUFDLDRDQUE0QyxJQUFJLEVBQUUsQ0FBQyxDQUFDO0FBRWhFLElBQUksS0FBSyxFQUFFLE1BQU0sR0FBRyxJQUFJLE1BQU0sRUFBRTtJQUM5QixPQUFPLENBQUMsR0FBRyxDQUFDLE1BQU0sRUFBRSxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDN0IsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0NBQ2IifQ==